{
{{^isPackage}} // Only generate body for non-package methods (isPublic or isPrivate)
  {{#isPrivate}}
  // TODO: Implement the logic for the private method {{nickname}}.
  this.logger.debug(`Executing private method {{classname}}#{{nickname}}`);
  {{/isPrivate}}
  try {
    {{> controllers/partials/parameterProcessing }}
    {{#hasQueryParams}}
    {{> controllers/partials/buildQueryParameters }}
    {{/hasQueryParams}}

    {{#isPublic}}
    // Public method: Call the handler and return the response object.
    const result = await this.handler.{{nickname}}({{#allParams}}{{paramName}}{{^-last}}, {{/-last}}{{/allParams}});
    {{#returnType}}
    return new {{.}}(result);
    {{/returnType}}
    {{^returnType}}
    return result;
    {{/returnType}}
    {{/isPublic}}
    {{#isPrivate}}
    throw new Error('Private method {{nickname}} logic not yet implemented.');
    {{/isPrivate}}

  } catch (error) {
    this.logger.error(`Error in {{#isPrivate}}private {{/isPrivate}}{{classname}}#{{nickname}}: ${error.message}`, error.stack);
    {{#isPrivate}}
    throw error;
    {{/isPrivate}}
    {{^isPrivate}} // This covers isPublic
    return new ErrorResponse(error, '{{nickname}}');
    {{/isPrivate}}
  }
{{/isPackage}}
{{#isPackage}}
  // Package-scoped methods are generated by llm.
  {{{llmImplementation}}}
{{/isPackage}}
}
